import channel from './utils/channel.json';
import VideoHeader from './components/VideoHeader';
import VideoFooter from './components/VideoFooter';
import ChannelRoomContainer from './components/ChannelRoomContainer';
import { useEffect, useRef, useState, createRef } from 'react';

const ChannelRoom = () => {
  const videos = [
    {
      name: 'newsint1.mp4',
      path: 'files\\news\\news_int\\newsint1_230703_0809.mp4',
      playedAt: '2023-07-04T05:01:05.444Z'
    },
    {
      name: 'newsnat1.mp4',
      path: 'files\\news\\news_nat\\newsnat1_230703_0809.mp4',
      playedAt: '2023-07-04T05:00:47.636Z'
    }
  ];

  const [currentVideoIndex, setCurrentVideoIndex] = useState(0)
  const [nextVideoIndex, setNextVideoIndex] = useState(1)
  const videoRefs = useRef([createRef(), createRef()]);

  const onVideoPlayed = () => {

  }

  const onVideoEnded = () => {
    
  }

  return (
    <ChannelRoomContainer>
      <VideoHeader />
      {videos.length > 0 && (
        <>
          <video
            ref={(el) => (videoRefs.current[0] = el)}
            // onEnded={handleVideoEnd}
            className="fixed z-10 inset-0 w-screen h-screen object-cover"
            autoPlay
            controls={true}
            style={{ display: 'block' }}
          >
            <source
              src={`/${videos[currentVideoIndex]?.path}`}
              type="video/mp4"
            />
          </video>

          <video
            ref={(el) => (videoRefs.current[1] = el)}
            // onEnded={handleVideoEnd}
            className="fixed z-10 inset-0 w-screen h-screen object-cover"
            autoPlay
            controls={true}
            style={{ display: 'none' }}
          >
            <source
              src={`/${videos[nextVideoIndex]?.path}`}
              type="video/mp4"
            />
          </video>
        </>
      )}

      <VideoFooter channel={channel} video={{ name: 'Temp' }} />
    </ChannelRoomContainer>
  );
};

export default ChannelRoom;
